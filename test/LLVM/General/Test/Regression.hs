module LLVM.General.Test.Regression where

import Test.Framework
import Test.Framework.Providers.HUnit
import Test.HUnit

import LLVM.General.Test.Support

import Data.Bits
import Data.Functor

import LLVM.General.Context
import LLVM.General.Module
import LLVM.General.Diagnostic
import LLVM.General.AST
import LLVM.General.AST.AddrSpace

import qualified LLVM.General.AST.IntegerPredicate as IPred
import qualified LLVM.General.AST.Linkage as L
import qualified LLVM.General.AST.Visibility as V
import qualified LLVM.General.AST.CallingConvention as CC
import qualified LLVM.General.AST.Attribute as A
import qualified LLVM.General.AST.Attribute as A
import qualified LLVM.General.AST.Global as G
import LLVM.General.AST.Global
import qualified LLVM.General.AST.Constant as C
import LLVM.General.AST.Constant

tests = testGroup "regression" [
    testCase "inter-function munging" $ withContext $ \context -> do
      let ast = Module {moduleName = "idris", moduleDataLayout = Nothing, moduleTargetTriple = Nothing, moduleDefinitions = [TypeDefinition (Name "valTy") (Just (StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 32},ArrayType {nArrayElements = 0, elementType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}]})),TypeDefinition (Name "mpz") (Just (StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 32},IntegerType {typeBits = 32},PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}]})),GlobalDefinition (GlobalVariable {name = Name "__idris_intFmtStr", linkage = External, visibility = Default, isThreadLocal = False, addrSpace = AddrSpace 0, hasUnnamedAddr = True, isConstant = True, type' = ArrayType {nArrayElements = 5, elementType = IntegerType {typeBits = 8}}, initializer = Just (Array {memberType = IntegerType {typeBits = 8}, memberValues = [Int {integerBits = 8, integerValue = 37},Int {integerBits = 8, integerValue = 108},Int {integerBits = 8, integerValue = 108},Int {integerBits = 8, integerValue = 100},Int {integerBits = 8, integerValue = 0}]}), section = Nothing, alignment = 0}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = C, returnAttributes = [], returnType = PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}, name = Name "__idris_intStr", parameters = ([Parameter (IntegerType {typeBits = 64}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (UnName 0) [UnName 1 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc_atomic"))), arguments = [(ConstantOperand (Int {integerBits = 64, integerValue = 12}),[])], functionAttributes = [], metadata = []},UnName 2 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "snprintf"))), arguments = [(LocalReference (UnName 1),[]),(ConstantOperand (Int {integerBits = 64, integerValue = 12}),[]),(ConstantOperand (GetElementPtr {inBounds = True, address = GlobalReference (Name "__idris_intFmtStr"), indices = [Int {integerBits = 32, integerValue = 0},Int {integerBits = 32, integerValue = 0}]}),[]),(LocalReference (UnName 0),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 1)), metadata' = []}))]}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "llvm.trap", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = IntegerType {typeBits = 32}, name = Name "snprintf", parameters = ([Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (IntegerType {typeBits = 64}) (UnName 0) [],Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) []],True), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = IntegerType {typeBits = 32}, name = Name "strcmp", parameters = ([Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = IntegerType {typeBits = 64}, name = Name "strlen", parameters = ([Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}, name = Name "memcpy", parameters = ([Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (IntegerType {typeBits = 64}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}, name = Name "GC_malloc", parameters = ([Parameter (IntegerType {typeBits = 64}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}, name = Name "GC_malloc_atomic", parameters = ([Parameter (IntegerType {typeBits = 64}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_init", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_add", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_sub", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_mul", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_fdiv_q", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_fdiv_r", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_and", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_ior", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "__gmpz_xor", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (GlobalVariable {name = UnName 0, linkage = Internal, visibility = Default, isThreadLocal = False, addrSpace = AddrSpace 0, hasUnnamedAddr = True, isConstant = True, type' = ArrayType {nArrayElements = 15, elementType = IntegerType {typeBits = 8}}, initializer = Just (Array {memberType = IntegerType {typeBits = 8}, memberValues = [Int {integerBits = 8, integerValue = 72},Int {integerBits = 8, integerValue = 101},Int {integerBits = 8, integerValue = 108},Int {integerBits = 8, integerValue = 108},Int {integerBits = 8, integerValue = 111},Int {integerBits = 8, integerValue = 44},Int {integerBits = 8, integerValue = 32},Int {integerBits = 8, integerValue = 119},Int {integerBits = 8, integerValue = 111},Int {integerBits = 8, integerValue = 114},Int {integerBits = 8, integerValue = 108},Int {integerBits = 8, integerValue = 100},Int {integerBits = 8, integerValue = 33},Int {integerBits = 8, integerValue = 10},Int {integerBits = 8, integerValue = 0}]}), section = Nothing, alignment = 0}),GlobalDefinition (Function {linkage = External, visibility = Default, callingConvention = C, returnAttributes = [], returnType = VoidType, name = Name "putStr", parameters = ([Parameter (PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}) (UnName 0) []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = []}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "FalseElim", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "interpFTy", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e0}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{e0}"),[])], functionAttributes = [], metadata = []},UnName 1 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 2 := Load {volatile = False, address = LocalReference (UnName 1), maybeAtomicity = Nothing, alignment = 0, metadata = []}] (Do (Switch {operand0' = LocalReference (UnName 2), defaultDest = Name "default3", dests = [(Int {integerBits = 32, integerValue = 5},Name "FAny5"),(Int {integerBits = 32, integerValue = 2},Name "FFloat6"),(Int {integerBits = 32, integerValue = 1},Name "FFunction7"),(Int {integerBits = 32, integerValue = 0},Name "FIntT8"),(Int {integerBits = 32, integerValue = 4},Name "FPtr9"),(Int {integerBits = 32, integerValue = 3},Name "FString10"),(Int {integerBits = 32, integerValue = 6},Name "FUnit11")], metadata' = []})),BasicBlock (Name "default3") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []})),BasicBlock (Name "FAny5") [UnName 12 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},Name "{e2}13" := Load {volatile = False, address = LocalReference (UnName 12), maybeAtomicity = Nothing, alignment = 0, metadata = []}] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FFloat6") [] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FFunction7") [UnName 14 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},Name "{e3}15" := Load {volatile = False, address = LocalReference (UnName 14), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 16 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},Name "{e4}17" := Load {volatile = False, address = LocalReference (UnName 16), maybeAtomicity = Nothing, alignment = 0, metadata = []}] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FIntT8") [UnName 18 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},Name "{e1}19" := Load {volatile = False, address = LocalReference (UnName 18), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 20 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{e1}19"),[])], functionAttributes = [], metadata = []},UnName 21 := GetElementPtr {inBounds = True, address = LocalReference (UnName 20), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 22 := Load {volatile = False, address = LocalReference (UnName 21), maybeAtomicity = Nothing, alignment = 0, metadata = []}] (Do (Switch {operand0' = LocalReference (UnName 22), defaultDest = Name "default23", dests = [(Int {integerBits = 32, integerValue = 2},Name "IT1625"),(Int {integerBits = 32, integerValue = 3},Name "IT3226"),(Int {integerBits = 32, integerValue = 4},Name "IT6427"),(Int {integerBits = 32, integerValue = 1},Name "IT828"),(Int {integerBits = 32, integerValue = 0},Name "ITNative29")], metadata' = []})),BasicBlock (Name "default23") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []})),BasicBlock (Name "IT1625") [] (Do (Br {dest = Name "caseExit24", metadata' = []})),BasicBlock (Name "IT3226") [] (Do (Br {dest = Name "caseExit24", metadata' = []})),BasicBlock (Name "IT6427") [] (Do (Br {dest = Name "caseExit24", metadata' = []})),BasicBlock (Name "IT828") [] (Do (Br {dest = Name "caseExit24", metadata' = []})),BasicBlock (Name "ITNative29") [] (Do (Br {dest = Name "caseExit24", metadata' = []})),BasicBlock (Name "caseExit24") [UnName 30 := Phi {type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, incomingValues = [(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "IT1625"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "IT3226"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "IT6427"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "IT828"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "ITNative29")], metadata = []}] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FPtr9") [] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FString10") [] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "FUnit11") [UnName 31 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 32},ArrayType {nArrayElements = 0, elementType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}]}, pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 32 := BitCast {operand0 = LocalReference (UnName 31), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 32},ArrayType {nArrayElements = 0, elementType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 33 := GetElementPtr {inBounds = True, address = LocalReference (UnName 32), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},Do (Store {volatile = False, address = LocalReference (UnName 33), value = ConstantOperand (Int {integerBits = 32, integerValue = 65594}), maybeAtomicity = Nothing, alignment = 0, metadata = []}),UnName 34 := BitCast {operand0 = LocalReference (UnName 32), type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, metadata = []}] (Do (Br {dest = Name "caseExit4", metadata' = []})),BasicBlock (Name "caseExit4") [UnName 35 := Phi {type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, incomingValues = [(LocalReference (Name "{e2}13"),Name "FAny5"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "FFloat6"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "FFunction7"),(LocalReference (UnName 30),Name "caseExit24"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "FPtr9"),(ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}}),Name "FString10"),(LocalReference (UnName 34),Name "FUnit11")], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 35)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "io_bind", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e0}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e1}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e2}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e3}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{e2}"),[])], functionAttributes = [], metadata = []},UnName 1 := GetElementPtr {inBounds = True, address = LocalReference (UnName 0), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 2 := Load {volatile = False, address = LocalReference (UnName 1), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 3 := Call {isTailCall = True, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{APPLY0}"))), arguments = [(LocalReference (Name "{e3}"),[]),(LocalReference (UnName 2),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 3)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "Main.main", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 1 := BitCast {operand0 = LocalReference (UnName 0), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 2 := GetElementPtr {inBounds = True, address = LocalReference (UnName 1), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 3 := GetElementPtr {inBounds = True, address = LocalReference (UnName 1), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},Do (Store {volatile = False, address = LocalReference (UnName 2), value = ConstantOperand (Int {integerBits = 8, integerValue = -1}), maybeAtomicity = Nothing, alignment = 0, metadata = []}),Do (Store {volatile = False, address = LocalReference (UnName 3), value = ConstantOperand (GetElementPtr {inBounds = True, address = GlobalReference (UnName 0), indices = [Int {integerBits = 32, integerValue = 0},Int {integerBits = 32, integerValue = 0}]}), maybeAtomicity = Nothing, alignment = 0, metadata = []}),UnName 4 := BitCast {operand0 = LocalReference (UnName 1), type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 5 := Call {isTailCall = True, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "Prelude.putStr"))), arguments = [(LocalReference (UnName 4),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 5)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "mkForeign", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "mkLazyForeign", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "prim__addBigInt", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{op0}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{op1}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{op0}"),[])], functionAttributes = [], metadata = []},UnName 1 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{op1}"),[])], functionAttributes = [], metadata = []},UnName 2 := BitCast {operand0 = LocalReference (UnName 0), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 3 := GetElementPtr {inBounds = True, address = LocalReference (UnName 2), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},UnName 4 := Load {volatile = False, address = LocalReference (UnName 3), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 5 := BitCast {operand0 = LocalReference (UnName 1), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 6 := GetElementPtr {inBounds = True, address = LocalReference (UnName 5), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},UnName 7 := Load {volatile = False, address = LocalReference (UnName 6), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 8 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 9 := BitCast {operand0 = LocalReference (UnName 8), type' = PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}, metadata = []},Do (Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "__gmpz_init"))), arguments = [(LocalReference (UnName 9),[])], functionAttributes = [], metadata = []}),Do (Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "__gmpz_add"))), arguments = [(LocalReference (UnName 9),[]),(LocalReference (UnName 4),[]),(LocalReference (UnName 7),[])], functionAttributes = [], metadata = []}),UnName 10 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 11 := BitCast {operand0 = LocalReference (UnName 10), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 12 := GetElementPtr {inBounds = True, address = LocalReference (UnName 11), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 13 := GetElementPtr {inBounds = True, address = LocalReference (UnName 11), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},Do (Store {volatile = False, address = LocalReference (UnName 12), value = ConstantOperand (Int {integerBits = 8, integerValue = -1}), maybeAtomicity = Nothing, alignment = 0, metadata = []}),Do (Store {volatile = False, address = LocalReference (UnName 13), value = LocalReference (UnName 9), maybeAtomicity = Nothing, alignment = 0, metadata = []}),UnName 14 := BitCast {operand0 = LocalReference (UnName 11), type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 14)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "prim__subBigInt", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{op0}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{op1}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{op0}"),[])], functionAttributes = [], metadata = []},UnName 1 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{op1}"),[])], functionAttributes = [], metadata = []},UnName 2 := BitCast {operand0 = LocalReference (UnName 0), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 3 := GetElementPtr {inBounds = True, address = LocalReference (UnName 2), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},UnName 4 := Load {volatile = False, address = LocalReference (UnName 3), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 5 := BitCast {operand0 = LocalReference (UnName 1), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 6 := GetElementPtr {inBounds = True, address = LocalReference (UnName 5), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},UnName 7 := Load {volatile = False, address = LocalReference (UnName 6), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 8 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 9 := BitCast {operand0 = LocalReference (UnName 8), type' = PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}, metadata = []},Do (Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "__gmpz_init"))), arguments = [(LocalReference (UnName 9),[])], functionAttributes = [], metadata = []}),Do (Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "__gmpz_sub"))), arguments = [(LocalReference (UnName 9),[]),(LocalReference (UnName 4),[]),(LocalReference (UnName 7),[])], functionAttributes = [], metadata = []}),UnName 10 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "GC_malloc"))), arguments = [(ConstantOperand (PtrToInt {operand0 = GetElementPtr {inBounds = True, address = Null {constantType = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}}, indices = [Int {integerBits = 32, integerValue = 1}]}, type' = IntegerType {typeBits = 64}}),[])], functionAttributes = [], metadata = []},UnName 11 := BitCast {operand0 = LocalReference (UnName 10), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = NamedTypeReference (Name "mpz"), pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 12 := GetElementPtr {inBounds = True, address = LocalReference (UnName 11), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 13 := GetElementPtr {inBounds = True, address = LocalReference (UnName 11), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},Do (Store {volatile = False, address = LocalReference (UnName 12), value = ConstantOperand (Int {integerBits = 8, integerValue = -1}), maybeAtomicity = Nothing, alignment = 0, metadata = []}),Do (Store {volatile = False, address = LocalReference (UnName 13), value = LocalReference (UnName 9), maybeAtomicity = Nothing, alignment = 0, metadata = []}),UnName 14 := BitCast {operand0 = LocalReference (UnName 11), type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 14)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "Prelude.putStr", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e0}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{e0}"),[])], functionAttributes = [], metadata = []},UnName 1 := BitCast {operand0 = LocalReference (UnName 0), type' = PointerType {pointerReferent = StructureType {isPacked = False, elementTypes = [IntegerType {typeBits = 8},PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}]}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 2 := GetElementPtr {inBounds = True, address = LocalReference (UnName 1), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 1})], metadata = []},UnName 3 := Load {volatile = False, address = LocalReference (UnName 2), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 4 := Call {isTailCall = False, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "putStr"))), arguments = [(LocalReference (UnName 3),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}})), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "run__IO", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{e0}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (Name "{e0}"),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 0)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "unsafePerformIO", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [Do (Call {isTailCall = True, callingConvention = C, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "llvm.trap"))), arguments = [], functionAttributes = [NoReturn], metadata = []})] (Do (Unreachable {metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "{APPLY0}", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{fn0}") [],Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{arg0}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [] (Do (Ret {returnOperand = Just (ConstantOperand (Null {constantType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}})), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "{EVAL0}", parameters = ([Parameter (PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}) (Name "{arg0}") []],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := BitCast {operand0 = LocalReference (Name "{arg0}"), type' = PointerType {pointerReferent = IntegerType {typeBits = 8}, pointerAddrSpace = AddrSpace 0}, metadata = []},UnName 1 := Load {volatile = False, address = LocalReference (UnName 0), maybeAtomicity = Nothing, alignment = 0, metadata = []},UnName 2 := ICmp {iPredicate = EQ, operand0 = LocalReference (UnName 1), operand1 = ConstantOperand (Int {integerBits = 8, integerValue = -1}), metadata = []}] (Do (CondBr {condition = LocalReference (UnName 2), trueDest = Name "value4", falseDest = Name "constructor3", metadata' = []})),BasicBlock (Name "constructor3") [UnName 5 := GetElementPtr {inBounds = True, address = LocalReference (Name "{arg0}"), indices = [ConstantOperand (Int {integerBits = 32, integerValue = 0}),ConstantOperand (Int {integerBits = 32, integerValue = 0})], metadata = []},UnName 6 := Load {volatile = False, address = LocalReference (UnName 5), maybeAtomicity = Nothing, alignment = 0, metadata = []}] (Do (Switch {operand0' = LocalReference (UnName 6), defaultDest = Name "default7", dests = [], metadata' = []})),BasicBlock (Name "default7") [] (Do (Br {dest = Name "caseExit8", metadata' = []})),BasicBlock (Name "caseExit8") [UnName 9 := Phi {type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, incomingValues = [(LocalReference (Name "{arg0}"),Name "default7")], metadata = []}] (Do (Br {dest = Name "value4", metadata' = []})),BasicBlock (Name "value4") [UnName 10 := Phi {type' = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, incomingValues = [(LocalReference (Name "{arg0}"),Name "begin"),(LocalReference (UnName 9),Name "constructor3")], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 10)), metadata' = []}))]}),GlobalDefinition (Function {linkage = Internal, visibility = Default, callingConvention = Fast, returnAttributes = [], returnType = PointerType {pointerReferent = NamedTypeReference (Name "valTy"), pointerAddrSpace = AddrSpace 0}, name = Name "{runMain0}", parameters = ([],False), functionAttributes = [], section = Nothing, alignment = 0, basicBlocks = [BasicBlock (Name "entry") [] (Do (Br {dest = Name "begin", metadata' = []})),BasicBlock (Name "begin") [UnName 0 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "Main.main"))), arguments = [], functionAttributes = [], metadata = []},UnName 1 := Call {isTailCall = False, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "run__IO"))), arguments = [(LocalReference (UnName 0),[])], functionAttributes = [], metadata = []},UnName 2 := Call {isTailCall = True, callingConvention = Fast, returnAttributes = [], function = Right (ConstantOperand (GlobalReference (Name "{EVAL0}"))), arguments = [(LocalReference (UnName 1),[])], functionAttributes = [], metadata = []}] (Do (Ret {returnOperand = Just (LocalReference (UnName 2)), metadata' = []}))]})]}
      strCheck ast ""
   ]
